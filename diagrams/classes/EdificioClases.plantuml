@startuml

interface Pista{
    + {abstract} mostrarPista() : void
}

class PistaEscrita{
    - pista : str
    + mostrarPista() : void
}


abstract Edificio{
    + entrar() : Tiempo
}

class ControladorEntradas{
    + demoraTemporal() : Tiempo
}

interface DemoradorPorEntradas{
    + {abstract} demoraTemporal() : Tiempo
    + {abstract} aumentar() : DemoradorPorEntradas
}

class PrimerEntrada{
    + demoraTemporal() : Tiempo
    + aumentar() : DemoradorPorEntradas
}

class SegundaEntrada{
    + demoraTemporal() : Tiempo
    + aumentar() : DemoradorPorEntradas
}

class TercerEntrada{
    + demoraTemporal() : Tiempo
    + aumentar() : DemoradorPorEntradas
}

note left of ControladorEntradas::demoraTemporal
    tiempo = demorador.demoraTemporal();
    demorador.aumentar();
    return tiempo;
end note

DemoradorPorEntradas <|.. PrimerEntrada
DemoradorPorEntradas <|.. SegundaEntrada
DemoradorPorEntradas <|.. TercerEntrada

ControladorEntradas o-- DemoradorPorEntradas

PistaEscrita ..|> Pista

Pista --o Edificio
Edificio o-- ControladorEntradas

@enduml